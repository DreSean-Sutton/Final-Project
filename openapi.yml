# shift+alt+P to preview swagger
openapi: 3.0.0
info:
  title: Dre Sean Sutton's Smash Ultimate API
  description: >
    This is *the* Smash Ultimate restful API that offers indepth
    frame data information on the cast. Use a query parameter to specify
    a single Fighter. Values separated by `/`, `()`, and `[]`
    indicate different hitboxes that are mirrored
    by the `moveType` property. All frame data is copied from the
    fantastic [Ultimate Frame Data](https://ultimateframedata.com)
    website, occasionally modified for clarity, and manually input
    into my database. If you see any mistakes, please let me know on GitHub!
    </br>
    </br>
    14 Fighters, so far, and at least 1 is added daily!
    </br>
    </br>
    [Gitub](https://github.com/DreSean-Sutton/Final-Project)
    [LinkedIn](https://www.linkedin.com/in/dre-sean-sutton-6343b5222)

  version: v9

paths:
  /api/fighters:
    get:
      tags:
        - Fighters
      summary: Returns basic information for all fighters
      description: >
       Use `fighter`, `fighterId`, and `rosterId`
       to specify a single fighter
      parameters:
      - in: query
        name: fighter
        schema:
          type: string
        required: false
      - in: query
        name: fighterId
        schema:
          type: integer
        required: false
      - in: query
        name: rosterId
        schema:
          type: integer
        required: false
      - in: query
        name: orderByRosterId
        schema:
          type: boolean
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    figherId:
                      type: integer
                    fighter:
                      type: string
                    rosterId:
                      type: integer
                    displayName:
                      type: string
                example:
                -
                  fighterId: 1
                  fighter: banjo
                  rosterId: 73
                  displayName: Banjo & Kazooie
                -
                  fighterId: 2
                  fighter: bayonetta
                  rosterId: 63
                  displayName: Bayonetta
  /api/fighters/data:
    get:
      tags:
        - Fighters
      summary: Returns all frame data for all Fighters
      description: >
       Use `fighter`, `fighterId`, and `rosterId`
       to specify a single fighter
      parameters:
      - in: query
        name: fighter
        schema:
          type: string
        required: false
      - in: query
        name: fighterId
        schema:
          type: integer
        required: false
      - in: query
        name: rosterId
        schema:
          type: integer
        required: false
      - in: query
        name: orderByRosterId
        schema:
          type: boolean
        required: false
      responses:
        '200':
          description:
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allData'

  /api/fighters/data/{type}:
    get:
      tags:
      - Fighters
      summary: Returns a specific type of frame data for all Fighters
      description: >
       Use `fighter`, `fighterId`, and `rosterId`
       to specify a single fighter
      parameters:
      - in: path
        name: type
        schema:
          type: string
        required: true
        description: Must be `moves`, `throws`, `movements` or `stats`
      - in: query
        name: fighter
        schema:
          type: string
        required: false
      - in: query
        name: fighterId
        schema:
          type: integer
        required: false
      - in: query
        name: rosterId
        schema:
          type: integer
        required: false
      - in: query
        name: orderByRosterId
        schema:
          type: boolean
        required: false
      responses:
        '200':
          description:
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allData'

  /api/add/fighters:
    post:
      tags:
      - Add
      summary: Add a Fighter and their basic data
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                fighter:
                  type: string
                rosterId:
                  type: integer
              required:
              - fighter
              - displayName
              - rosterId
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fightersResponse'

  /api/add/moves/{fighterId}:
    post:
      tags:
      - Add
      summary: Add move data to a Fighter
      parameters:
      - in: path
        name: fighterId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/movesRequestBody'
             required:
              - fighterId
              - name
              - moveType
              - damage
              - activeFrames
              - totalFrames
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movesResponse'

  /api/add/throws/{fighterId}:
    post:
      tags:
      - Add
      summary: Add throw data to a Fighter
      parameters:
      - in: path
        name: fighterId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/throwsRequestBody'
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/throwsResponse'

  /api/add/movements/{fighterId}:
    post:
      tags:
      - Add
      summary: Add movement data to a Fighter
      parameters:
      - in: path
        name: fighterId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activeFrames:
                  type: string
                name:
                  type: string
                totalFrames:
                  type: string
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movementsResponse'

  /api/add/stats/{fighterId}:
    post:
      tags:
      - Add
      summary: Add stat data to a Fighter
      parameters:
      - in: path
        name: fighterId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                statValue:
                  type: string
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsResponse'

  /api/update/fighters/{fighterId}:
    put:
      tags:
      - Update
      summary: Update a fighter's basic information
      parameters:
      - in: path
        name: fighterId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                fighter:
                  type: string
                rosterId:
                  type: integer
      responses:
        '200':
          description:
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fightersResponse'

  /api/update/moves/{moveId}:
    put:
      tags:
      - Update
      summary: Update a fighter's moves
      parameters:
      - in: path
        name: moveId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movesRequestBody'
      responses:
        '200':
          description:
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movesResponse'

  /api/update/throws/{throwId}:
    put:
      tags:
      - Update
      summary: Update a fighter's throws
      parameters:
      - in: path
        name: throwId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/throwsRequestBody'
      responses:
        '200':
          description:
            OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/throwsResponse'

  /api/update/movements/{movementId}:
    put:
      tags:
      - Update
      summary: Update a fighter's movements
      parameters:
      - in: path
        name: movementId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activeFrames:
                  type: string
                name:
                  type: string
                totalFrames:
                  type: string
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movementsResponse'

  /api/update/stats/{statId}:
    put:
      tags:
      - Update
      summary: update a fighter's stats
      parameters:
      - in: path
        name: statId
        schema:
          type: integer
        required: true
      requestBody:
        description: Click `Try it out` and edit your request!
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                statValue:
                  type: string
      responses:
        '201':
          description:
            created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsResponse'
  /api/delete/fighters/{id}:
    delete:
      tags:
      - Delete
      summary: Delete a fighter and all of their data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          description:
            no content
  /api/delete/moves/{id}:
    delete:
      tags:
      - Delete
      summary: Delete a fighter's move data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          description:
            no content
  /api/delete/throws/{id}:
    delete:
      tags:
      - Delete
      summary: Delete a fighter's throw data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          description:
            no content
  /api/delete/movements/{id}:
    delete:
      tags:
      - Delete
      summary: Delete a fighter's movement data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          description:
            no content
  /api/delete/stats/{id}:
    delete:
      tags:
      - Delete
      summary: Delete a fighter's stat data
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          description:
            no content

components:
  schemas:
    fightersResponse:
      type: object
      items:
        type: object
        properties:
          displayName:
            type: string
          fighter:
            type: string
          fighterId:
            type: integer
          rosterId:
            type: integer
      example:
        displayName: Son goku
        fighter: goku
        fighterId: 1
        rosterId: 100
        createdAt: 2020-02-20etc

    allData:
      type: array
      items:
        type: object
        properties:
          activeFrames:
            type: string
          damage:
            type: string
          displayName:
            type: string
          fighter:
            type: string
          fighterId:
            type: integer
          moveType:
            type: string
          name:
            type: string
          rosterId:
            type: integer
          statValue:
            type: string
          totalFrames:
            type: string
          type:
            type: string
      example:
      -
        activeFrames: "6/11-25 [rehit: 3]/27-28"
        damage: 3.0/0.2/3.0%
        displayName: Bayonetta
        fighter: bayonetta
        fighterId: 2
        moveType: first/multi/final
        name: up b
        rosterId: 69
        totalFrames: 31
        type: move
      -
        activeFrames: 7-8
        damage: null
        displayName: Bayonetta
        fighter: bayonetta
        fighterId: 2
        name: grab
        rosterId: 69
        totalFrames: 37
        type: throw
      -
        activeFrames: 3-29
        displayName: Inkling
        fighter: inkling
        fighterId: 13
        name: neutral air dodge
        rosterId: 70
        totalFrames: 50
        type: movement
      -
        displayName: Inkling
        fighter: inkling
        fightrId: 13
        name: out of shield, neutral air/up smash
        rosterId: 70
        statValue: 9 frames
        type: stat

    movesRequestBody:
      type: object
      properties:
        activeFrames:
          type: string
        damage:
          type: string
        moveType:
          type: string
        name:
          type: string
        totalFrames:
          type: string

    movesResponse:
      type: object
      items:
        type: object
        properties:
          activeFrames:
            type: string
          damage:
            type: string
          fighterId:
            type: integer
          moveId:
            type: integer
          moveType:
            type: string
          name:
            type: string
          totalFrames:
            type: string
          type:
            type: string
      example:
        activeFrames: 1-100
        damage: 9001%
        fighterId: 1
        moveId: 150
        movetype: multi
        name: kamehameha
        totalFrames: '105'
        type: move
        createdAt: 2020-02-20etc
    throwsRequestBody:
      type: object
      properties:
        activeFrames:
          type: string
        damage:
          type: string
        name:
          type: string
        totalFrames:
          type: string
    throwsResponse:
      type: object
      items:
        type: object
        properties:
          activeFrames:
            type: string
          damage:
            type: string
          fighterId:
            type: integer
          throwId:
            type: integer
          name:
            type: string
          totalFrames:
            type: string
          type:
            type: string
      example:
        activeFrames: '1/5/10'
        damage: '10.0/5.0/40.5%'
        fighterId: 1
        throwId: 203
        name: down throw
        totalFrames: '15'
        type: throw
        createdAt: 2020-02-20etc

    movementsResponse:
      type: object
      items:
        type: object
        properties:
          activeFrames:
            type: string
          fighterId:
            type: integer
          movementId:
            type: integer
          name:
            type: string
          totalFrames:
            type: string
          type:
            type: string
      example:
        activeFrames: '1-5'
        fighterId: 1
        movementId: 30
        name: spot dodge
        totalFrames: '6'
        type: movement
        createdAt: 2020-02-20etc
    statsResponse:
      type: object
      items:
        type: object
        properties:
          fighterId:
            type: integer
          name:
            type: string
          statId:
            type: integer
          statValue:
            type: string
          type:
            type: string
      example:
        fighterId: 1
        name: weight
        statId: 30
        statValue: 120
        type: stat
        createdAt: 2020-02-20etc
